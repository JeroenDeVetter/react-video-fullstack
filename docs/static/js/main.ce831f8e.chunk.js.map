{"version":3,"sources":["img/noimg.jpg","apiKey.js","Component/nav.js","Component/pagenav.js","Component/card.js","Component/cardList.js","View/home.js","Component/iframe.js","Component/credit.js","View/movieDis.js","Component/allert.js","View/login.js","View/register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiKey","nav","props","Navbar","bg","variant","to","Brand","Nav","className","FormControl","onKeyPress","event","key","document","getElementById","value","type","placeholder","id","pagenav","count","Pagination","Prev","onClick","setCount","window","scrollTo","top","Item","Next","card","Card","style","width","Img","src","Body","display","Title","title","Text","overview","cardList","movies","map","data","setMovieId","currentTarget","setMovieName","lastChild","childNodes","innerText","movie","poster_path","Home","useState","setMovie","url","Key","countHome","undefined","Search","useEffect","Axios","get","then","json","results","setSearch","atribute","setMovieID","iframe","trailer","height","ResponsiveEmbed","aspectRatio","gender","credit","img","NoImg","character","name","MovieDis","trailerKey","setTrailerKey","cast","setCast","movieId","url2","loop","i","length","toLowerCase","split","j","movieName","profile_path","Allert","Alert","show","success","Heading","message","Login","querySelector","addEventListener","setUsers","setDisplay","setVariant","setLogout","setMassage","users","Form","method","onSubmit","email","password","post","res","console","log","status","firstName","lastName","catch","err","preventDefault","login","Group","controlId","Label","Control","Button","logout","Register","passwordTwo","firstname","lastname","register","App","setCountHome","MovieName","setMessage","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ce831f8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimg.862ad291.jpg\";","const apiKey = `4d6f4b60a499907f2f7cb19137144751`;\r\n\r\nexport default apiKey;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction nav(props) {\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Link to=\"/\">\r\n                <Navbar.Brand >Movie Hub</Navbar.Brand>\r\n            </Link>\r\n            <Nav className=\"mr-auto\">\r\n                <Link to=\"/\">\r\n                    <span>Home</span>\r\n                </Link>\r\n                <Link className=\"ml-2\" to=\"/login\">\r\n                    <span>Login</span>\r\n                </Link>\r\n            </Nav>\r\n\r\n            <FormControl onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                    props.event(document.getElementById('movieName').value)\r\n                }\r\n            }} type=\"text\" placeholder=\"Search\" id='movieName' className=\"mr-sm-2\"/>\r\n\r\n        </Navbar>\r\n    )\r\n\r\n}\r\n\r\nexport default nav;","import React from \"react\";\r\nimport Pagination from  \"react-bootstrap/Pagination\";\r\n\r\n\r\nfunction pagenav(props) {\r\n    let count = props.count;\r\n    return (\r\n        <Pagination>\r\n            <Pagination.Prev onClick={() => {\r\n                if (count > 1) {\r\n                    props.setCount(count - 1);\r\n                    window.scrollTo({\r\n                        top: 0\r\n                    });\r\n\r\n                }\r\n            }} />\r\n            <Pagination.Item>{count}</Pagination.Item>\r\n            <Pagination.Next onClick={() => {\r\n                if (count >= 1) {\r\n                    props.setCount(count + 1);\r\n                    window.scrollTo({\r\n                        top: 0\r\n                    });\r\n                }\r\n            }} />\r\n        </Pagination>\r\n    )\r\n}\r\nexport default pagenav;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst card = (props) => {\r\n    return (\r\n        <Card style={{width: '18rem'}}>\r\n            <Link to=\"/movie\">\r\n                <Card.Img variant=\"top\" src={props.src}/>\r\n            </Link>\r\n            <Card.Body style={{display: 'block'}}>\r\n                <Card.Title>{props.title}</Card.Title>\r\n                <Card.Text>\r\n                    {props.overview}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default card;","import MovieCard from \"./card\";\r\nimport React from \"react\";\r\nconst cardList = (props) => {\r\n    return props.movies.map(data => {\r\n        let titleMovie = \"\";\r\n          return (\r\n              <div className=\"cardItems\" id={data.id} key={data.id} onClick={(event) => {\r\n                  props.setMovieId(event.currentTarget.id);\r\n                  props.setMovieName(event.currentTarget.lastChild.childNodes[1].childNodes[0].innerText);\r\n              }}>\r\n                  <MovieCard movie={titleMovie}  src={`http://image.tmdb.org/t/p/w185//${data.poster_path}`} title={data.title} overview={data.overview}/>\r\n              </div>\r\n          )\r\n    })\r\n};\r\nexport default cardList;","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport Key from '../apiKey';\r\nimport Nav from '../Component/nav';\r\nimport PageNav from '../Component/pagenav';\r\nimport CardList from '../Component/cardList';\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst Home = (props) => {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    // Key must be set in apiKey.js with your own key\r\n    let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${Key}&language=en-US&page=${props.countHome}`;\r\n\r\n\r\n    if (props.Search !== undefined) {\r\n        url = `https://api.themoviedb.org/3/search/movie?api_key=${Key}&query=${props.Search}&page=${props.countHome}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(url).then(json => setMovie(json.data.results))\r\n    }, [url]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Navbar\">\r\n                <header>\r\n                    <Nav event={props.setSearch} atribute={setMovie}/>\r\n                </header>\r\n            </div>\r\n            <h1 className=\"mt-4\">Overview latest movies</h1>\r\n            <div className=\"page-nav\">\r\n                <PageNav count={props.countHome} setCount={props.setCount}/>\r\n            </div>\r\n\r\n            <div className=\"Card\">\r\n                <CardList setMovieName={props.setMovieName} movies={movie} setMovieId={props.setMovieID}/>\r\n            </div>\r\n            <div className=\"page-nav\">\r\n                <PageNav count={props.countHome} setCount={props.setCount}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\n\r\nconst iframe = (props) => {\r\n    let url = `https://www.youtube.com/embed/${props.trailer}`;\r\n    return(\r\n\r\n        <div style={{ width: 660, height: 'auto' }}>\r\n            <ResponsiveEmbed aspectRatio=\"16by9\">\r\n                <embed type=\"video/webm\" src={url} />\r\n            </ResponsiveEmbed>\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default iframe;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport NoImg from \"../img/noimg.jpg\";\r\n\r\nlet gender = \"\";\r\nconst credit = (props) => {\r\n\r\n    if (props.gender === 2) {\r\n        gender = \"Male\";\r\n    }if(props.gender === 1) {\r\n        gender = \"Female\";\r\n    }if(props.gender === 0) {\r\n        gender = \"Unspecified\"\r\n    }\r\n    let img  = '';\r\n\r\n    if (props.src === null) {\r\n        img = NoImg;\r\n    }\r\n    else {\r\n        img = `http://image.tmdb.org/t/p/w185//${props.src}`;\r\n    }\r\n\r\n    return (\r\n        <Card style={{width: '18rem'}}>\r\n            <Card.Img variant=\"top\" src={img}/>\r\n            <Card.Body style={{display: 'block'}}>\r\n                <Card.Title>{props.character}</Card.Title>\r\n                <Card.Text>\r\n                    {props.name}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    {gender}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default credit;","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport Nav from '../Component/nav';\r\nimport Trailer from '../Component/iframe';\r\nimport Credit from '../Component/credit';\r\nimport Axios from \"axios\";\r\n\r\nconst MovieDis = (props) => {\r\n    const [trailerKey, setTrailerKey] = useState([]);\r\n    const [cast, setCast] = useState([]);\r\n    let url = `http://api.themoviedb.org/3/movie/${props.movieId}/videos?api_key=4d6f4b60a499907f2f7cb19137144751`;\r\n    let url2 = `http://api.themoviedb.org/3/movie/${props.movieId}/credits?api_key=4d6f4b60a499907f2f7cb19137144751`;\r\n\r\n    useEffect(() => {\r\n        Axios.get(url).then(json => setTrailerKey(json.data.results))\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(url2).then(json => setCast(json.data.cast))\r\n    }, [url2]);\r\n     let key = \"\";\r\n     loop :  for (let i = 0; i < trailerKey.length; i++) {\r\n         let name = trailerKey[i].name.toLowerCase().split(\" \");\r\n         for (let j = 0; j < name.length; j++) {\r\n             if (name[j] === \"official\" && name[j + 1] === \"trailer\") {\r\n                 key = trailerKey[i].key;\r\n                 name = trailerKey[i].name;\r\n                 break loop;\r\n             }\r\n             if (name[j] === \"trailer\") {\r\n                 key = trailerKey[i].key;\r\n                 name = trailerKey[i].name;\r\n                 break loop;\r\n             }\r\n         }\r\n     }\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Navbar\">\r\n                <header>\r\n                    <Nav/>\r\n                </header>\r\n            </div>\r\n\r\n            <h1 className=\"mt-4\">\r\n                {props.movieName}\r\n            </h1>\r\n\r\n             <div className=\"Card\">\r\n                <Trailer trailer={key}/>\r\n            </div>\r\n            <h1 className=\"mt-3\">Cast</h1>\r\n            <div className=\"Card\">\r\n                {cast.map(data => {\r\n\r\n                    if (data.profile_path !== null) {\r\n                        return (\r\n                            <div key={data.id}>\r\n                                <Credit name={data.name} src={data.profile_path} character={data.character} gender={data.gender}/>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return false;\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MovieDis;","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst Allert = (props) => {\r\n    return(\r\n        <Alert style={{display: props.display}} show={props.success} variant={props.variant}>\r\n            <Alert.Heading>\r\n                {props.message}\r\n            </Alert.Heading>\r\n            <div className=\"close\">&#x274C;</div>\r\n        </Alert>\r\n    )\r\n\r\n};\r\nexport default Allert;","import React, {useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport Nav from '../Component/nav'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Sucsses from '../Component/allert';\r\nimport Axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const login = (event) => {\r\n        const email = document.getElementById('formBasicEmail').value;\r\n        const password = document.getElementById('formBasicPassword').value;\r\n        Axios.post('http://localhost:3001/login', {\r\n            email: `${email}`,\r\n            password: `${password}`,\r\n        }).then(res => {\r\n            console.log(res)\r\n            props.setUsers(res.data[0]);\r\n            if (res.data[0].status === true) {\r\n                props.setDisplay('block');\r\n                props.setVariant('success');\r\n                props.setMassage(`welcome ${res.data[0].firstName} ${res.data[0].lastName}`)\r\n                props.setLogout('');\r\n                return;\r\n            }\r\n            if (res.data[0].status === 'noFound') {\r\n                props.setDisplay('block');\r\n                props.setVariant('danger');\r\n                props.setMassage(`No known user found with this email please register first`);\r\n                return;\r\n            } else {\r\n                props.setDisplay('block');\r\n                props.setVariant('danger');\r\n                props.setMassage(`Email and or password is incorrect`);\r\n                return;\r\n            }\r\n        }).catch(err => console.log(err));\r\n        event.preventDefault();\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.querySelector('.logout').addEventListener(\"click\", () => {\r\n            props.setUsers('');\r\n            props.setDisplay('block');\r\n            props.setVariant('success');\r\n            props.setLogout('none');\r\n            props.setMassage('You are logged out')\r\n        });\r\n\r\n        document.querySelector('.close').addEventListener(\"click\", () => {\r\n            props.setDisplay('none');\r\n            props.setUsers('');\r\n            props.setVariant('');\r\n            props.setLogout('');\r\n            props.setMassage('');\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"Navbar\">\r\n                <header>\r\n                    <Nav/>\r\n                </header>\r\n            </div>\r\n            <Sucsses variant={props.variant} display={props.display} message={props.message} name={props.users}/>\r\n            <div className=\"Card\">\r\n                <Form method=\"POST\" onSubmit={(event) => {\r\n                    login(event);\r\n                }}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name=\"Email\" placeholder=\"Enter email\"/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Link to=\"/register\">\r\n                            <span>No account make one here</span>\r\n                        </Link>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n            <Button className=\"logout\" style={{display: props.logout}} variant=\"primary\">\r\n                Login out\r\n            </Button>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Login;","import React, {useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport Nav from '../Component/nav'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from \"react-router-dom\"\r\nimport Axios from \"axios\";\r\nimport Sucsses from \"../Component/allert\";\r\n\r\nconst Register = (props) => {\r\n\r\n\r\n\r\n    const register = (event) => {\r\n        const email = document.getElementById('formBasicEmail').value;\r\n        const firstName = document.getElementById('formBasicFistName').value;\r\n        const lastName = document.getElementById('formBasicLastName').value;\r\n        const password = document.getElementById('formBasicPassword').value;\r\n        const passwordTwo = document.getElementById('formBasicPasswordTwo').value;\r\n        Axios.post('http://localhost:3001/register', {\r\n            email: `${email}`,\r\n            firstname: `${firstName}`,\r\n            lastname: `${lastName}`,\r\n            password: `${password}`,\r\n            passwordTwo: `${passwordTwo}`\r\n        }).then(res => {\r\n            console.log(res)\r\n            props.setDisplay('');\r\n            props.setMassage('Your registered');\r\n            props.setVariant('success');\r\n        }).catch(err => console.log(err));\r\n        event.preventDefault();\r\n    };\r\n    useEffect(() => {\r\n        document.querySelector('.close').addEventListener(\"click\", () => {\r\n            props.setDisplay('none');\r\n            props.setUsers('');\r\n            props.setVariant('');\r\n            props.setLogout('');\r\n            props.setMassage('');\r\n\r\n        });\r\n    }, []);\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"Navbar\">\r\n                    <header>\r\n                        <Nav/>\r\n                    </header>\r\n                </div>\r\n                <Sucsses variant={props.variant} display={props.display} message={props.message} name={props.users}/>\r\n                <div className=\"Card\">\r\n                    <Form method=\"POST\" onSubmit={(event) => register(event)}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control name='Email' placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicFistName\">\r\n                            <Form.Label>First name</Form.Label>\r\n                            <Form.Control name=\"FirstName\" type=\"text\" placeholder=\"First Name\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicLastName\">\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control name=\"Lastname\" type=\"text\" placeholder=\"Last Name\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name=\"Password\" type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPasswordTwo\">\r\n                            <Form.Label>Confirm password</Form.Label>\r\n                            <Form.Control name=\"PasswordTwo\" type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Link to=\"/login\">\r\n                                <span>Already a account click here</span>\r\n                            </Link>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n};\r\n\r\nexport default Register;","import React, {useState} from 'react';\nimport Home from './View/home';\nimport MovieDis from \"./View/movieDis\";\nimport Login from \"./View/login\";\nimport Register from \"./View/register\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nconst App = () => {\n  const [movieId,setMovieId] = useState(0);\n  const [countHome, setCountHome] = useState(1);\n  const [Search, setSearch] = useState();\n  const [MovieName, setMovieName] = useState();\n  const [users, setUsers] = useState([]);\n  const [display,setDisplay] = useState('none');\n  const [message,setMessage] = useState('');\n  const [variant,setVariant] = useState('');\n  const [logout, setLogout] = useState('none');\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home Search={Search} setMovieName={setMovieName} setSearch={setSearch} countHome={countHome} setCount={setCountHome} setMovieID={setMovieId}/>}/>\n          <Route path=\"/movie\" component={() => <MovieDis movieName={MovieName} movieId={movieId}/>}/>\n          <Route path=\"/login\" component={() => <Login logout={logout} setLogout={setLogout} variant={variant} setVariant={setVariant} users={users} message={message} setMassage={setMessage} display={display} setDisplay={setDisplay} setUsers={setUsers}/>}/>\n          <Route path=\"/register\" component={() => <Register display={display} setDisplay={setDisplay} variant={variant} setVariant={setVariant} message={message} setMassage={setMessage}/>}/>\n        </Switch>\n      </Router>\n  )\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}